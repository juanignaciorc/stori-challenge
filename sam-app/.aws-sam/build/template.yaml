AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Stori Challenge - Transaction Processing Application

  '
Globals:
  Function:
    Timeout: 30
    MemorySize: 256
Parameters:
  EmailSender:
    Type: String
    Description: Email address to send transaction summaries from
    Default: juanignacioroldan01@gmail.com
Resources:
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Transactions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: ID
        AttributeType: S
      KeySchema:
      - AttributeName: ID
        KeyType: HASH
  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Accounts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: AccountID
        AttributeType: S
      KeySchema:
      - AttributeName: AccountID
        KeyType: HASH
  TransactionProcessorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: TransactionProcessorPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:Scan
            Resource:
            - Fn::GetAtt:
              - TransactionsTable
              - Arn
            - Fn::GetAtt:
              - AccountsTable
              - Arn
  TransactionProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
      - x86_64
      Role:
        Fn::GetAtt:
        - TransactionProcessorRole
        - Arn
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /process-transactions
            Method: POST
      Environment:
        Variables:
          EMAIL_SENDER:
            Ref: EmailSender
          EMAIL_PASSWORD: hzxl ubfo uwub lske
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: '587'
          TRANSACTIONS_TABLE:
            Ref: TransactionsTable
          ACCOUNTS_TABLE:
            Ref: AccountsTable
          ACCOUNT_ID: default
      ImageUri: transactionprocessorfunction:provided.al2023-v1
    Metadata:
      DockerContext: /home/novakorp/Stori/stori-challenge/sam-app/transaction-processor
      DockerTag: provided.al2023-v1
      Dockerfile: Dockerfile
      SamResourceId: TransactionProcessorFunction
Outputs:
  TransactionProcessorAPI:
    Description: API Gateway endpoint URL for processing transactions
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/process-transactions/
  TransactionProcessorFunction:
    Description: Transaction Processor Lambda Function ARN
    Value:
      Fn::GetAtt:
      - TransactionProcessorFunction
      - Arn
  TransactionProcessorRole:
    Description: IAM Role for Transaction Processor function
    Value:
      Fn::GetAtt:
      - TransactionProcessorRole
      - Arn
  TransactionsTableName:
    Description: DynamoDB Table for storing transactions
    Value:
      Ref: TransactionsTable
  AccountsTableName:
    Description: DynamoDB Table for storing account information
    Value:
      Ref: AccountsTable
